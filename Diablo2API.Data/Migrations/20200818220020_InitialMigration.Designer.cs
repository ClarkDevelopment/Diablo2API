// <auto-generated />
using System;
using Diablo2API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Diablo2API.Data.Migrations
{
    [DbContext(typeof(DiabloDbContext))]
    [Migration("20200818220020_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Diablo2API.Data.Models.Classes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("Energy")
                        .HasColumnType("int");

                    b.Property<decimal>("HealthPerVitalityPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ManaPerEnergyPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StaminaPerVitalityPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StatsPerLevelId")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int>("Vitality")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatsPerLevelId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Diablo2API.Data.Models.SkillTree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("SkillTrees");
                });

            modelBuilder.Entity("Diablo2API.Data.Models.StatsPerLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Mana")
                        .HasColumnType("int");

                    b.Property<int>("Stamina")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StatsPerLevel");
                });

            modelBuilder.Entity("PrerequisiteSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("TotalSkillTreePoints")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("PrerequisiteSkill");
                });

            modelBuilder.Entity("Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassiveEffect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredLevel")
                        .HasColumnType("int");

                    b.Property<int?>("SkillTraitsId")
                        .HasColumnType("int");

                    b.Property<int?>("SkillTreeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkillTraitsId");

                    b.HasIndex("SkillTreeId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("SkillTraitsByLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttackPercentageIncrease")
                        .HasColumnType("int");

                    b.Property<int>("AttackSpeedPercentageIncrease")
                        .HasColumnType("int");

                    b.Property<int>("DamagePercentageIncrease")
                        .HasColumnType("int");

                    b.Property<int>("DamageType")
                        .HasColumnType("int");

                    b.Property<int>("DefensePercentageIncrease")
                        .HasColumnType("int");

                    b.Property<int>("DurationInSeconds")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("ManaCost")
                        .HasColumnType("int");

                    b.Property<int>("MaximumDamage")
                        .HasColumnType("int");

                    b.Property<int>("MinimumDamage")
                        .HasColumnType("int");

                    b.Property<int>("Radius")
                        .HasColumnType("int");

                    b.Property<int>("WalkRunSpeedPercentageIncrease")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SkillTraitsByLevel");
                });

            modelBuilder.Entity("SynergyBonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BonusPercentage")
                        .HasColumnType("int");

                    b.Property<int?>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("SynergyBonus");
                });

            modelBuilder.Entity("Diablo2API.Data.Models.Classes", b =>
                {
                    b.HasOne("Diablo2API.Data.Models.StatsPerLevel", "StatsPerLevel")
                        .WithMany()
                        .HasForeignKey("StatsPerLevelId");
                });

            modelBuilder.Entity("Diablo2API.Data.Models.SkillTree", b =>
                {
                    b.HasOne("Diablo2API.Data.Models.Classes", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId");
                });

            modelBuilder.Entity("PrerequisiteSkill", b =>
                {
                    b.HasOne("Skill", null)
                        .WithMany("PrerequisiteSkills")
                        .HasForeignKey("SkillId");
                });

            modelBuilder.Entity("Skill", b =>
                {
                    b.HasOne("SkillTraitsByLevel", "SkillTraits")
                        .WithMany()
                        .HasForeignKey("SkillTraitsId");

                    b.HasOne("Diablo2API.Data.Models.SkillTree", "SkillTree")
                        .WithMany()
                        .HasForeignKey("SkillTreeId");
                });

            modelBuilder.Entity("SynergyBonus", b =>
                {
                    b.HasOne("Skill", "Skill")
                        .WithMany("SynergyBonuses")
                        .HasForeignKey("SkillId");
                });
#pragma warning restore 612, 618
        }
    }
}
